{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","country","setCountry","location","setLocation","total","setTotal","byCountry","useEffect","axios","get","then","res","data","All","catch","err","console","log","className","scope","confirmed","deaths","population","onSubmit","e","preventDefault","type","name","value","onChange","target","placeholder","required","loading","continent","sq_km_area","life_expectancy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAKe,SAASA,IAEtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAKQC,EAAS,4DAAwDN,GAGvEO,qBAAU,WACNC,IAAMC,IANK,4DAOVC,MAAK,SAACC,GAELN,EAASM,EAAIC,KAAKC,QAEnBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QACf,IAEHR,qBAAU,WACRC,IAAMC,IAAIH,GACTI,MAAK,SAACC,GACLK,QAAQC,IAAIN,EAAIC,MAChBT,EAAYQ,EAAIC,SAEjBE,OAAM,SAACC,GACNC,QAAQC,IAAIF,QACb,IA2CL,OACE,sBAAKG,UAAU,kCAAf,UACE,oBAAIA,UAAU,YAAd,iCAEE,6CACA,wBACAA,UAAU,sDADV,UAEE,uBAAOA,UAAU,eAAjB,SACE,+BACA,oBAAIC,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,6BAGF,gCACA,+BACA,6BAAMf,EAAMgB,YACZ,6BAAMhB,EAAMiB,SACZ,6BAAMjB,EAAMkB,qBAKd,uBAAMJ,UAAU,kBAAkBK,SA/BlB,SAACC,GACjBA,EAAEC,iBAXO,4DAaIzB,GAZbQ,IAAMC,IAAIH,GACTI,MAAK,SAACC,GACLK,QAAQC,IAAIN,EAAIC,MAChBT,EAAYQ,EAAIC,KAAKC,QAEtBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAOdC,QAAQC,IAAIf,EAASW,MA2BrB,UACE,yDACA,uBAAOa,KAAK,OACVC,KAAK,UACLC,MAAQ5B,EACR6B,SAvDiB,SAACL,GAEtBvB,EACGuB,EAAEM,OAAOF,QAqDRG,YAAY,sBACZC,UAAQ,IAEV,uBAAON,KAAK,SAASE,MAAM,WAC3B,0BAEF,uBAEC5B,EACD,qCACA,qBAAIkB,UAAU,YAAd,UAA2BlB,EAA3B,WACA,wBAAQiC,QAAQ,OACff,UAAU,mDADX,UAEE,uBAAOA,UAAU,eAAjB,SACE,+BACA,oBAAIC,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,kCAGF,gCACA,+BACA,6BAAMjB,EAASgC,YACf,+BAAMhC,EAASiC,WAAf,SACA,6BAAMjC,EAASoB,aACf,+BAAMpB,EAASkC,gBAAf,oBAMF,kDAEA,0BC7IR,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c751b90.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  const [country, setCountry] = useState('')\r\n  const [location, setLocation] = useState([])\r\n  const [total, setTotal] = useState([]) \r\n\r\n  //api name\r\n    const global = 'https://covid-api.mmediagroup.fr/v1/cases?country=Global'\r\n\r\n    const byCountry = `https://covid-api.mmediagroup.fr/v1/cases?country=${country}`\r\n\r\n    //Make petition to api\r\n    useEffect(() =>{\r\n        axios.get(global)\r\n        .then((res)=> {\r\n          //console.log(res)\r\n          setTotal(res.data.All)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)})\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n      axios.get(byCountry)\r\n      .then((res)=> {\r\n        console.log(res.data)\r\n        setLocation(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)})\r\n    }, [])\r\n    \r\n\r\n    /*   //we put an async await to give time to load the new call\r\n    useEffect(() => {\r\n      getData()\r\n    }, [location])\r\n\r\n    const getData = async () => {\r\n        const data = await fetch(byCountry)\r\n        const pais = await data.json()\r\n        setLocation(pais)\r\n    } */\r\n\r\n\r\n    //get value from select area or input area\r\n      const countryHandler = (e) => {\r\n        //console.log(e.target.value)\r\n        setCountry(\r\n           e.target.value\r\n        )\r\n      }\r\n\r\n      // \r\n      const findByCountry = (countryy) =>{\r\n        const url = `https://covid-api.mmediagroup.fr/v1/cases?country=${countryy}`\r\n        axios.get(byCountry)\r\n        .then((res)=> {\r\n          console.log(res.data)\r\n          setLocation(res.data.All)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)})\r\n      }\r\n\r\n      const sendQuery = (e) => {\r\n        e.preventDefault()\r\n       // setCountry(country)\r\n       findByCountry(country)\r\n        console.log(location.All)\r\n      }\r\n\r\n   \r\n  return (\r\n    <div className=\"App container mt-3 mb-5 bg-dark\">\r\n      <h1 className=\"display-2\">World Covid-19 data</h1>\r\n\r\n        <h2>Global data</h2>\r\n        <table\r\n        className=\"table table-dark table-bordered table-responsive-sm\">\r\n          <thead className=\"table-active\">\r\n            <tr>\r\n            <th scope=\"col\">Confirmed</th>\r\n            <th scope=\"col\">Deaths</th>\r\n            <th scope=\"col\">Population</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n          <td>{ total.confirmed }</td>\r\n          <td>{ total.deaths }</td>\r\n          <td>{ total.population }</td>\r\n          </tr>\r\n          </tbody>          \r\n        </table>\r\n\r\n        <form className=\"form-group mt-5\" onSubmit={sendQuery}>\r\n          <p>Search your country here</p>\r\n          <input type=\"text\"\r\n            name=\"country\"\r\n            value={ country }\r\n            onChange={ countryHandler }\r\n            placeholder=\"Type a country here\"\r\n            required\r\n          />\r\n          <input type=\"submit\" value=\"Search\" />\r\n          <br/>\r\n        </form>\r\n        <br/>\r\n       \r\n       { country ? \r\n        <>\r\n        <h2 className=\"display-6\">{country} data</h2>\r\n        <table  loading=\"lazy\"\r\n         className=\"table table-dark table-bordered table-responsive\">\r\n          <thead className=\"table-active\">\r\n            <tr>\r\n            <th scope=\"col\">Continent</th>\r\n            <th scope=\"col\">Country area</th>\r\n            <th scope=\"col\">Population</th>\r\n            <th scope=\"col\">Life expectancy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n          <td>{ location.continent }</td>\r\n          <td>{ location.sq_km_area } km</td>\r\n          <td>{ location.population }</td>\r\n          <td>{ location.life_expectancy } ~ </td>\r\n          </tr>\r\n          </tbody>          \r\n        </table>\r\n        </>\r\n        :\r\n        <p>Type your country</p>\r\n        }\r\n        <br/>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}